{"version":3,"sources":["components/banner/Pageinprogress.tsx","components/icons/Nclogo.tsx","components/navbar/ButtonAppBar.tsx","components/Home.tsx","components/Features.tsx","components/Countdown.tsx","Routing.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Pageinprogress","icon","label","showDismissButton","open","Nclogo","props","SvgIcon","width","height","fill","d","fill-rule","clip-rule","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","fontSize","Typography","variant","Button","Home","Features","Countdown","Routing","exact","path","App","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6RAiBeA,MAXf,WACI,OACI,kBAAC,SAAD,CACIC,KAAM,6BAAK,kBAAC,IAAD,OACXC,MAAM,kCACNC,mBAAmB,EACnBC,MAAI,K,wECSDC,MAjBf,SAAgBC,GACZ,OACI,kBAACC,EAAA,EAAYD,EAGT,0BAAME,MAAM,KAAKC,OAAO,KAAKC,KAAK,UAClC,0BAAMF,MAAM,KAAKC,OAAO,KAAKC,KAAK,YAClC,0BAAMC,EAAE,uBAAuBD,KAAK,UACpC,0BAAMC,EAAE,iCAAiCD,KAAK,UAC9C,0BAAME,YAAU,UAAUC,YAAU,UAAUF,EAAE,oFAAoFD,KAAK,UACzI,0BAAME,YAAU,UAAUC,YAAU,UAAUF,EAAE,6JAA6JD,KAAK,UAClN,0BAAMC,EAAE,2nBAA2nBD,KAAK,YCN9oBI,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaL,EAAMM,QAAQ,IAE/BC,MAAO,CACHJ,SAAU,QAKP,SAASK,IACpB,IAAMC,EAAUX,IAEhB,OACI,yBAAKY,UAAWD,EAAQP,MACpB,kBAACS,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQL,UAAWD,EAAQL,WAAYY,MAAM,UAAUC,aAAW,QAC/E,kBAAC,EAAD,CAAQC,SAAS,WAErB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWD,EAAQF,OAA5C,WAGA,kBAACc,EAAA,EAAD,CAAQL,MAAM,WAAd,gB,8BC1BLM,MARf,WACI,OACI,6BACI,sCCKGC,MARf,WACI,OACI,6BACI,0CCKGC,MARf,WACI,OACI,6BACI,2CCkBGC,MAjBf,WACG,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,cACR,kBAAC,EAAD,UCEAC,MAZf,WACE,OACE,yBAAKlB,UAAU,OACX,kBAAC,EAAD,MACA,kBAACF,EAAD,MACA,kBAACqB,EAAA,EAAD,CAAWC,SAAS,MAChB,kBAAC,EAAD,SCDQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.22b80739.chunk.js","sourcesContent":["// @ts-ignore\nimport React from 'react';\nimport Build from \"@material-ui/icons/Build\";\n// @ts-ignore\nimport { Banner } from 'material-ui-banner';\n\nfunction Pageinprogress() {\n    return (\n        <Banner\n            icon={<div><Build></Build></div>}\n            label=\"This page is under construction\"\n            showDismissButton={false}\n            open\n        />\n    );\n}\n\nexport default Pageinprogress;","import React from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\n\n// @ts-ignore\nfunction Nclogo(props) {\n    return (\n        <SvgIcon {...props}>\n            {/*<path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />*/}\n\n            <rect width=\"24\" height=\"24\" fill=\"white\"/>\n            <rect width=\"24\" height=\"24\" fill=\"#FAFF00\"/>\n            <path d=\"M3 7H4.37047V18H3V7Z\" fill=\"black\"/>\n            <path d=\"M10.766 7H12.1365V18H10.766V7Z\" fill=\"black\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.80666 17.1646L4.91866 7.62658L5.30163 7.51262L10.1896 17.0506L9.80666 17.1646Z\" fill=\"black\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.3535 7.42244L10.308 17.0901L9.75479 17.2547L4.80032 7.58706L5.3535 7.42244ZM5.037 7.66611L9.85853 17.0744L10.0713 17.0111L5.24976 7.6028L5.037 7.66611Z\" fill=\"black\"/>\n            <path d=\"M17.8054 7C18.5486 7 19.1954 7.13676 19.7455 7.41027L19.1168 8.44911C18.7617 8.25755 18.3246 8.16176 17.8054 8.16176C16.9056 8.16176 16.199 8.4951 15.6855 9.16176C15.1769 9.82843 14.9226 10.777 14.9226 12.0074V13.0441C14.9226 14.2059 15.1647 15.1299 15.6488 15.8162C16.1329 16.5025 16.8102 16.8456 17.6807 16.8456C18.401 16.8456 18.9659 16.696 19.3754 16.3969L20 17.4289C19.3712 17.8096 18.5981 18 17.6807 18C16.419 18 15.4068 17.5466 14.6439 16.6397C13.8859 15.7328 13.5069 14.5196 13.5069 13V11.9706C13.5069 10.9755 13.683 10.1005 14.0351 9.34559C14.392 8.59069 14.8957 8.01225 15.5461 7.61029C16.1965 7.20343 16.9496 7 17.8054 7Z\" fill=\"black\"/>\n\n        </SvgIcon>\n    );\n}\n\nexport default Nclogo;","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Nclogo from \"../icons/Nclogo\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nexport default function ButtonAppBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <Nclogo fontSize=\"large\"/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        NoCapes\n                    </Typography>\n                    <Button color=\"inherit\">Subscribe</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from \"react\"\n\nfunction Home() {\n    return (\n        <div>\n            <h2>Home</h2>\n        </div>\n    );\n}\n\nexport default Home;","import React from \"react\"\n\nfunction Features() {\n    return (\n        <div>\n            <h2>Features</h2>\n        </div>\n    );\n}\n\nexport default Features;","import React from \"react\"\n\nfunction Countdown() {\n    return (\n        <div>\n            <h2>Countdown</h2>\n        </div>\n    );\n}\n\nexport default Countdown;","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Features from \"./components/Features\";\nimport Countdown from \"./components/Countdown\";\n\nfunction Routing(){\n   return(\n       <Router>\n       <Switch>\n           <Route exact path=\"/\">\n               <Home />\n           </Route>\n           <Route path=\"/features\">\n               <Features />\n           </Route>\n           <Route path=\"/countdown\">\n               <Countdown />\n           </Route>\n       </Switch>\n   </Router>);\n}\n\nexport default Routing;","// @ts-ignore\nimport React from \"react\";\nimport './App.css';\nimport Pageinprogress from \"./components/banner/Pageinprogress\";\nimport ButtonAppBar from \"./components/navbar/ButtonAppBar\";\nimport {Container} from \"@material-ui/core\";\nimport Routing from \"./Routing\";\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Pageinprogress></Pageinprogress>\n        <ButtonAppBar></ButtonAppBar>\n        <Container maxWidth=\"xl\">\n            <Routing/>\n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// @ts-ignore\nimport React from 'react';\n// @ts-ignore\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}